{"version":3,"sources":["webpack:///./assets/js/src/utils/context.js","webpack:///./assets/js/src/utils/utils.js","webpack:///./assets/js/src/components/Header.js","webpack:///./assets/js/src/components/LoadingIndicator.js","webpack:///./assets/js/src/components/Section.js","webpack:///./assets/js/src/utils/ajax.js","webpack:///./assets/js/src/components/MetricsCharts.js","webpack:///./assets/js/src/components/MetricFilters.js","webpack:///./assets/js/src/components/SendingProgress.js","webpack:///./assets/js/src/tabs/Metrics.js","webpack:///./assets/js/src/tabs/Logs.js","webpack:///./assets/js/admin.js","webpack:///./assets/js/src/tabs/DNS.js","webpack:///./assets/js/src/tabs/Settings.js","webpack:///./assets/js/src/components/Tabs.js","webpack:///./assets/js/src/AdminPage.js"],"names":["defaultContext","fields","window","WPMailPro","data","metricsFilter","logsPage","logsFilters","status","recipient","isLoading","notice","message","success","error","warning","updateField","setLoading","displayNotice","AppContext","createContext","ContextContainer","children","useState","updateFields","setNotice","hideNotice","previousNotice","useEffect","hider","setTimeout","clearTimeout","Provider","value","name","previousFields","type","useAppState","useContext","i18n","slug","context","strings","Notice","className","onDismiss","hot","size","label","title","Header","Section","doAjaxCall","action","a","axios","post","api","rest_url","headers","nonce","timeout","then","response","Promise","resolve","reject","getMetrics","force","range","payload","getLogs","filters","page","saveFields","sendTestEmail","email","createDomain","domain","verifyRecords","activateLicense","license","deactivateLicense","getEmailContent","id","COLORS","getPercentage","number","total","parseFloat","toFixed","StatPie","pieChartData","parseInt","getPieChartData","ResponsiveContainer","width","height","PieChart","Pie","innerRadius","outerRadius","startAngle","endAngle","paddingAngle","dataKey","map","entry","index","Cell","key","fill","length","targeted","opened","accepted","clicked","bounce","rejected","admin_bounce","onChange","current","filter","f","onClick","progress","progressBarWidth","max","Math","round","progressBarClass","push","color","join","style","href","target","license_activated","fetchMetrics","result","metrics","sending_limit","onRefreshClick","e","canShowData","sending_domain","variant","mutedOutline","$","previewIframe","LogsTable","logs","resetExpand","expandedRow","setExpandedRow","expandRow","mt","Row","header","HeaderCell","colSpan","log","l","isExpanded","Fragment","date","subject","sender","content","details","even","LogsTableActionsRow","has_error","engagement","has_content","preview_url","LogsTablenavigator","currentPage","pagination","onPaginationChange","max_pages","pageRange","pages","dateRange","setDateRange","setResetExpand","fetchLogs","date_range","changeFilter","changeDateRange","onFilterClick","preventDefault","i","newPage","hasLogs","onSubmit","options","placeholder","logsPagination","copy","useCopyToClipboard","onCreateClick","current_sending_domain","sending_domain_record_hostname","sending_domain_record_value","onVerifyClick","domain_dkim_record_is_valid","domain_dkim_record_verified","sender_mail","sender_mail_prefix","onCopyClick","text","hasDomainRecord","verificationExists","sendingDomain","default_sending_domain","connectRight","disabled","Icon","as","Add","mr","orientation","Label","Value","mb","EmailDomainSelectorDropdown","sender_mail_suffix","onActivateLicenseClick","onDeactivateLicenseClick","onEmailSaveClick","sender_name","onReplyToSaveClick","reply_to_mail","reply_to_name","onForceSenderEmailChange","checked","force_sender_email","onReplyToToggleChange","reply_to_enabled","onTestEmailClick","test_email_recipient","showAllSettingsBoxes","helpText","Email","tabsList","component","Metrics","Logs","DNS","Settings","initialTabIndex","findIndex","tab","current_tab","updateAdminMenuOnTabSelection","currentMenuLink","document","querySelector","menuLinkLi","parentNode","classList","remove","add","useTabs","tabs","tabIndex","setTabIndex","selected","onSelect","fitted","TabContent","addEventListener","render","jQuery","contents","find","html","loadIframeContent"],"mappings":"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","file":"admin_js/admin-89177f27.js","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\n\nconst defaultContext = {\n  fields: {\n    ...window.WPMailPro.data.fields,\n    metricsFilter: \"thisMonth\",\n    logsPage: 1,\n    logsFilters: {\n      status: \"all\",\n      recipient: \"\",\n    },\n  },\n  isLoading: false,\n  notice: {\n    message: null,\n    success: false,\n    error: false,\n    warning: false,\n  },\n  updateField: () => {},\n  setLoading: () => {},\n  displayNotice: () => {},\n};\n\nexport const AppContext = createContext(defaultContext);\n\nexport const ContextContainer = ({ children }) => {\n  const [fields, updateFields] = useState(defaultContext.fields);\n  const [isLoading, setLoading] = useState(defaultContext.isLoading);\n  const [notice, setNotice] = useState(defaultContext.notice);\n\n  // Update a specific field in our global state.\n  const updateField = (name, value) => {\n    updateFields((previousFields) => ({\n      ...previousFields,\n      [name]: value,\n    }));\n  };\n\n  // Display a notice message at the top of the page.\n  const displayNotice = (message, type = \"success\") => {\n    setNotice((previousNotice) => ({\n      ...defaultContext.notice,\n      message,\n      [type]: true,\n    }));\n  };\n\n  // Hide notice by resetting it.\n  const hideNotice = () => {\n    setNotice((previousNotice) => defaultContext.notice);\n  };\n\n  // Auto-hide notice after 5s.\n  useEffect(() => {\n    const hider = setTimeout(hideNotice, 7000);\n\n    return () => {\n      clearTimeout(hider);\n    };\n  }, [notice.message]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        // State.\n        fields: fields,\n        isLoading: isLoading,\n        notice: notice,\n\n        // Actions.\n        updateField: updateField,\n        setLoading: setLoading,\n        displayNotice: displayNotice,\n        hideNotice: hideNotice,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppState = () => useContext(AppContext);\n","import { useAppState } from \"./context\";\n\n/**\n * Get a translatable string.\n */\nexport const i18n = (slug, context = null) => {\n  if (context) {\n    slug = `${context}.${slug}`;\n  }\n\n  return window.WPMailPro.strings[slug] ? window.WPMailPro.strings[slug] : \"\";\n};\n\n/**\n * Get a specific field value coming from the database.\n */\nexport const getField = (name, defaultValue = \"\") => {\n  return window.WPMailPro.data.fields[name]\n    ? window.WPMailPro.data.fields[name]\n    : defaultValue;\n};\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useEffect } from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport { Snackbar } from \"@sparkpost/matchbox\";\nimport { useAppState } from \"../utils/context\";\n\nconst Notice = () => {\n  const { notice, hideNotice } = useAppState();\n\n  if (!notice.message) {\n    return null;\n  }\n\n  let status = \"success\";\n\n  if (notice.error) status = \"error\";\n  if (notice.warning) status = \"warning\";\n\n  return (\n    <Snackbar\n      className=\"feedback-notice\"\n      status={status}\n      onDismiss={hideNotice}\n    >\n      {notice.message}\n    </Snackbar>\n  );\n};\n\nconst Header = () => {\n  return (\n    <header className=\"settings-page-header\">\n      <h1 className=\"wp-heading-inline\">{i18n(\"Global.PageTitle\")}</h1>\n      <Notice />\n    </header>\n  );\n};\n\nexport default hot(Header);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport { useAppState } from \"../utils/context\";\nimport { Spinner } from \"@sparkpost/matchbox\";\n\nconst LoadingIndicator = () => {\n  const { isLoading } = useAppState();\n\n  if (!isLoading) {\n    return null;\n  }\n\n  return (\n    <div className=\"loader\">\n      <Spinner size=\"large\" label=\"Loading...\" />\n    </div>\n  );\n};\n\nexport default hot(LoadingIndicator);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { Panel } from \"@sparkpost/matchbox\";\n\nconst Section = ({ title, children, className = \"\" }) => {\n  return (\n    <Panel className={`tab-section ${className}`}>\n      {title && <Panel.Header>{title}</Panel.Header>}\n      <Panel.Section>{children}</Panel.Section>\n    </Panel>\n  );\n};\n\nexport default hot(Section);\n","import axios from \"axios\";\n\n/**\n * Send an AJAX call to the main plugin API route (POST).\n */\nexport const doAjaxCall = async (action, data) => {\n  return axios\n    .post(\n      `${window.WPMailPro.data.api.rest_url}wpmailpro/v1/admin/${action}`,\n      data,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-WP-Nonce\": window.WPMailPro.data.api.nonce,\n        },\n        timeout: 15 * 1000,\n      }\n    )\n    .then(\n      (response) => {\n        return Promise.resolve(response.data);\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n};\n\n/**\n * Get metrics.\n */\nexport const getMetrics = async (force = false, range) => {\n  try {\n    const payload = await doAjaxCall(\"metrics-get\", { force, range });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Get logs.\n */\nexport const getLogs = async (filters = {}, page = 1) => {\n  try {\n    const payload = await doAjaxCall(\"logs-get\", { filters, page });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Save basic fields in an option.\n */\nexport const saveFields = async (fields) => {\n  try {\n    const payload = await doAjaxCall(\"fields-save\", { fields });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Send a test e-mail to a specific address.\n */\nexport const sendTestEmail = async (email) => {\n  try {\n    const payload = await doAjaxCall(\"send-test-email\", { email });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Create a sending domain\n */\nexport const createDomain = async (domain) => {\n  try {\n    const payload = await doAjaxCall(\"domain-create\", { domain });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Verify a sending domain records.\n */\nexport const verifyRecords = async (domain) => {\n  try {\n    const payload = await doAjaxCall(\"domain-verify\", { domain });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Activate a license.\n */\nexport const activateLicense = async (license) => {\n  try {\n    const payload = await doAjaxCall(\"license-activate\", { license });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Deactivate a license.\n */\nexport const deactivateLicense = async (license) => {\n  try {\n    const payload = await doAjaxCall(\"license-deactivate\", { license });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n\n/**\n * Get an e-mail content.\n */\nexport const getEmailContent = async (id) => {\n  try {\n    const payload = await doAjaxCall(\"email-content-get\", { id });\n\n    return {\n      success: true,\n      ...payload,\n    };\n  } catch (error) {\n    return {\n      error: error.message,\n    };\n  }\n};\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport { Columns, Column } from \"@sparkpost/matchbox\";\nimport {\n  DoNotTouch,\n  Feedback,\n  MarkEmailRead,\n  Telegram,\n} from \"@sparkpost/matchbox-icons\";\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\nimport Section from \"./Section\";\n\nconst COLORS = [\"#1273e6\", \"#CACACA\"];\n\nconst getPercentage = (number, total) => {\n  if (number == 0) {\n    return 0;\n  }\n\n  return parseFloat((number * 100) / total).toFixed(2);\n};\n\nconst getPieChartData = (number, total) => {\n  return [\n    { value: parseInt(number) },\n    { value: parseInt(total) - parseInt(number) },\n  ];\n};\n\nconst StatPie = ({ number, total, title }) => {\n  const pieChartData = getPieChartData(number, total);\n\n  return (\n    <div className=\"pie-and-title\">\n      <ResponsiveContainer width=\"99%\" height={200}>\n        <PieChart>\n          <Pie\n            data={pieChartData}\n            // cx={100}\n            // cy={100}\n            innerRadius={70}\n            outerRadius={90}\n            startAngle={90}\n            endAngle={450}\n            paddingAngle={0}\n            dataKey=\"value\"\n          >\n            {pieChartData.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n      <header className=\"title\">\n        <h6>\n          {title} <strong>{`${getPercentage(number, total)}%`}</strong>\n        </h6>\n      </header>\n    </div>\n  );\n};\n\nconst MetricsCharts = ({ data }) => {\n  if (!data) {\n    return null;\n  }\n\n  const total = data.targeted;\n  const iconSize = 36;\n\n  return (\n    <div className=\"metrics-charts-container\">\n      <Columns>\n        <Column className=\"first-col\">\n          <Section>\n            <div className=\"metrics-box summary targeted\">\n              <Columns>\n                <Column className=\"icon-col\" width=\"40\">\n                  <Telegram size={iconSize} className=\"icon\" />\n                </Column>\n                <Column className=\"content-col\">\n                  <h3>{i18n(\"Metrics.Targeted\")}</h3>\n                  <p className=\"stat\">{data.targeted}</p>\n                </Column>\n              </Columns>\n            </div>\n          </Section>\n          <Section className=\"engagement-box-container\">\n            <h2>{i18n(\"Metrics.EngagementRates\")}</h2>\n            <div className=\"engagement-box\">\n              <p className=\"stat\">{`${getPercentage(\n                data.opened,\n                data.accepted\n              )}%`}</p>\n              <p className=\"caption\">\n                {i18n(\"Metrics.OpenRate\")} <small>({data.opened})</small>\n              </p>\n            </div>\n            <hr />\n            <div className=\"engagement-box\">\n              <p className=\"stat\">{`${getPercentage(\n                data.clicked,\n                data.accepted\n              )}%`}</p>\n              <p className=\"caption\">\n                {i18n(\"Metrics.ClickRate\")} <small>({data.clicked})</small>\n              </p>\n            </div>\n          </Section>\n        </Column>\n        <Column>\n          <Section>\n            <div className=\"metrics-box summary accepted\">\n              <Columns>\n                <Column className=\"icon-col\" width=\"40\">\n                  <MarkEmailRead size={iconSize} className=\"icon\" />\n                </Column>\n                <Column className=\"content-col\">\n                  <h3>{i18n(\"Metrics.Delivered\")}</h3>\n                  <p className=\"stat\">{data.accepted}</p>\n                </Column>\n              </Columns>\n            </div>\n\n            <hr />\n\n            <StatPie\n              number={data.accepted}\n              total={total}\n              title={i18n(\"Metrics.DeliveredRate\")}\n            />\n          </Section>\n        </Column>\n        <Column>\n          <Section>\n            <div className=\"metrics-box summary bounced\">\n              <Columns>\n                <Column className=\"icon-col\" width=\"40\">\n                  <Feedback size={iconSize} className=\"icon\" />\n                </Column>\n                <Column className=\"content-col\">\n                  <h3>{i18n(\"Metrics.Bounced\")}</h3>\n                  <p className=\"stat\">{data.bounce}</p>\n                </Column>\n              </Columns>\n            </div>\n\n            <hr />\n\n            <StatPie\n              number={data.bounce}\n              total={total}\n              title={i18n(\"Metrics.BounceRate\")}\n            />\n          </Section>\n        </Column>\n        <Column>\n          <Section>\n            <div className=\"metrics-box summary rejected\">\n              <Columns>\n                <Column className=\"icon-col\" width=\"40\">\n                  <DoNotTouch size={iconSize} className=\"icon\" />\n                </Column>\n                <Column className=\"content-col\">\n                  <h3>{i18n(\"Metrics.Rejected\")}</h3>\n                  <p className=\"stat\">{data.rejected + data.admin_bounce}</p>\n                </Column>\n              </Columns>\n            </div>\n\n            <hr />\n\n            <StatPie\n              number={data.rejected + data.admin_bounce}\n              total={total}\n              title={i18n(\"Metrics.RejectedRate\")}\n            />\n          </Section>\n        </Column>\n      </Columns>\n    </div>\n  );\n};\n\nexport default hot(MetricsCharts);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport Section from \"./Section\";\n\nconst filters = [\n  { value: \"last24Hours\", label: i18n(\"Metrics.RangeLast24Hours\") },\n  { value: \"last7Days\", label: i18n(\"Metrics.RangeLast7Days\") },\n  { value: \"thisMonth\", label: i18n(\"Metrics.RangeThisMonth\") },\n  { value: \"lastMonth\", label: i18n(\"Metrics.RangeLastMonth\") },\n];\n\nconst MetricFilters = ({ onChange, current }) => {\n  return (\n    <ul className=\"filters-button\">\n      {filters.map((filter, f) => {\n        if (filter.value === current) {\n          return (\n            <li className=\"active\" key={`metricFilter${f}`}>\n              {filter.label}\n            </li>\n          );\n        }\n\n        return (\n          <li\n            key={`metricFilter${f}`}\n            onClick={() => {\n              onChange(filter.value);\n            }}\n          >\n            {filter.label}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default hot(MetricFilters);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { i18n } from \"../utils/utils\";\nimport { Speed } from \"@sparkpost/matchbox-icons\";\nimport Section from \"./Section\";\n\nconst SendingProgress = ({ progress }) => {\n  let progressBarWidth = (progress.current * 100) / progress.max;\n\n  if (progressBarWidth > 100) {\n    progressBarWidth = 100;\n  }\n\n  progressBarWidth = Math.round(progressBarWidth);\n\n  let progressBarClass = [\"progress-bar\"];\n\n  if (progress.current > progress.max) {\n    progressBarClass.push(\"overflow\");\n  } else if (progress.current === progress.max) {\n    progressBarClass.push(\"full\");\n  } else if (progressBarWidth < 100 && progressBarWidth > 85) {\n    progressBarClass.push(\"almost\");\n  }\n\n  return (\n    <Section className=\"section-sending-limit\">\n      <div className=\"section-inner\">\n        <Speed size={32} color=\"#1273e6\" />\n        <h3>{i18n(\"Text.SendingLimit\")}</h3>\n        <p className=\"numbers\">\n          {progress.current} / {progress.max}\n        </p>\n        <div className={progressBarClass.join(\" \")}>\n          <div\n            className=\"progresser\"\n            style={{ width: `${progressBarWidth}%` }}\n          ></div>\n        </div>\n        <a\n          href=\"https://wpmailpro.com/pricing?upgrade=true\"\n          target=\"_blank\"\n          className=\"upgrade-button\"\n        >\n          {i18n(\"Text.Upgrade\")}\n        </a>\n      </div>\n    </Section>\n  );\n};\nexport default hot(SendingProgress);\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useEffect } from \"react\";\nimport { Banner, Box, Button, Column, Columns } from \"@sparkpost/matchbox\";\nimport Section from \"../components/Section\";\nimport { i18n } from \"../utils/utils\";\nimport { getMetrics } from \"../utils/ajax\";\nimport { useAppState } from \"../utils/context\";\nimport { Refresh } from \"@sparkpost/matchbox-icons\";\nimport MetricsCharts from \"../components/MetricsCharts\";\nimport MetricFilters from \"../components/MetricFilters\";\nimport SendingProgress from \"../components/SendingProgress\";\n\nconst Metrics = () => {\n  const { updateField, fields, isLoading, setLoading, displayNotice } =\n    useAppState();\n\n  //=====================================================================\n  //\n  //  ##      ##  #####  #####   ####  ##    ##   ####  ##      #####\n  //  ##      ##  ##     ##     ##      ##  ##   ##     ##      ##\n  //  ##      ##  #####  #####  ##       ####    ##     ##      #####\n  //  ##      ##  ##     ##     ##        ##     ##     ##      ##\n  //  ######  ##  ##     #####   ####     ##      ####  ######  #####\n  //\n  //=====================================================================\n\n  /**\n   * Refresh the metrics when switching to the Metrics tab or changing the filter range.\n   */\n  useEffect(() => {\n    if (fields.license_activated && !isLoading) {\n      fetchMetrics(true);\n    }\n  }, [fields.metricsFilter]);\n\n  //=====================================================\n  //\n  //  #####  ##   ##  #####  ##     ##  ######   ####\n  //  ##     ##   ##  ##     ####   ##    ##    ##\n  //  #####  ##   ##  #####  ##  ## ##    ##     ###\n  //  ##      ## ##   ##     ##    ###    ##       ##\n  //  #####    ###    #####  ##     ##    ##    ####\n  //\n  //=====================================================\n\n  /**\n   * Fetch new metrics.\n   */\n  const fetchMetrics = async (force = false) => {\n    if (isLoading) {\n      return;\n    }\n\n    setLoading(true);\n    const result = await getMetrics(force, fields.metricsFilter);\n\n    if (result.success === true) {\n      updateField(\"metrics\", result.fields.metrics);\n\n      if (result.fields.sending_limit) {\n        updateField(\"sending_limit\", result.fields.sending_limit);\n      }\n    } else {\n      updateField(\"metrics\", {});\n      updateField(\"sending_limit\", null);\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When manually refreshing.\n   */\n  const onRefreshClick = async (e) => {\n    fetchMetrics(true);\n  };\n\n  /**\n   * When changing filter.\n   */\n  const onMetricFilterChange = (range) => {\n    updateField(\"metricsFilter\", range);\n  };\n\n  //======================================\n  //\n  //  ##   ##    ###    #####     ####\n  //  ##   ##   ## ##   ##  ##   ##\n  //  ##   ##  ##   ##  #####     ###\n  //   ## ##   #######  ##  ##      ##\n  //    ###    ##   ##  ##   ##  ####\n  //\n  //======================================\n\n  const data =\n    fields.metrics && fields.metrics.data ? fields.metrics.data : null;\n\n  const canShowData = !!fields.license_activated && !!fields.sending_domain;\n\n  return (\n    <>\n      <Section className=\"section-metrics\">\n        {!canShowData ? (\n          <Banner size=\"small\" status=\"warning\" onDismiss={() => {}}>\n            {i18n(\"Text.NoMetricsReason\")}\n          </Banner>\n        ) : (\n          <header>\n            {canShowData && (\n              <>\n                <MetricFilters\n                  onChange={onMetricFilterChange}\n                  current={fields.metricsFilter}\n                />\n                <Button\n                  size=\"small\"\n                  variant=\"text\"\n                  color=\"blue\"\n                  onClick={onRefreshClick}\n                  mutedOutline\n                >\n                  <Refresh size=\"36\" fill=\"gray\" />\n                </Button>\n              </>\n            )}\n          </header>\n        )}\n      </Section>\n      {canShowData && fields.sending_limit && fields.sending_limit.max > 0 && (\n        <SendingProgress progress={fields.sending_limit} />\n      )}\n      {data && canShowData && <MetricsCharts data={data} />}\n    </>\n  );\n};\n\nexport default hot(Metrics);\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useState, useEffect } from \"react\";\nimport Section from \"../components/Section\";\nimport {\n  Button,\n  Column,\n  Columns,\n  Pagination,\n  Panel,\n  Select,\n  Table,\n  TextField,\n  Tooltip,\n} from \"@sparkpost/matchbox\";\nimport { i18n } from \"../utils/utils\";\nimport { getLogs } from \"../utils/ajax\";\nimport { useAppState } from \"../utils/context\";\nimport { ExpandLess, ExpandMore, Refresh } from \"@sparkpost/matchbox-icons\";\n\nconst Logs = () => {\n  const [dateRange, setDateRange] = useState(\"last_30days\");\n  const [resetExpand, setResetExpand] = useState(false);\n  const { updateField, fields, isLoading, setLoading, displayNotice } =\n    useAppState();\n\n  /**\n   * Main function in charge of fetching logs via AJAX.\n   */\n  const fetchLogs = async (page = 1, force = false) => {\n    if (isLoading && !force) {\n      return;\n    }\n\n    setLoading(true);\n    setResetExpand(true);\n\n    const result = await getLogs(\n      {\n        status: fields.logsFilters.status || \"all\",\n        recipient: fields.logsFilters.recipient || \"\",\n        date_range: dateRange,\n      },\n      page\n    );\n\n    if (result.success === true) {\n      updateField(\"logs\", result.fields.logs.data);\n      updateField(\"logsPagination\", result.fields.logs.pagination);\n    } else {\n      updateField(\"logs\", []);\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n    setResetExpand(false);\n  };\n\n  /**\n   * Update a filter.\n   */\n  const changeFilter = (name, value) => {\n    updateField(\"logsFilters\", {\n      ...fields.logsFilters,\n      [name]: value,\n    });\n  };\n\n  /**\n   * Update date range filter.\n   */\n  const changeDateRange = (range) => {\n    setDateRange(range);\n  };\n\n  /**\n   * On first component load, fetch logs.\n   */\n  useEffect(() => {\n    fetchLogs(1, true);\n  }, []);\n\n  /**\n   * When date range changes, fetch logs.\n   */\n  useEffect(() => {\n    fetchLogs(1, true);\n  }, [dateRange]);\n\n  /**\n   * When clicking on a filter.\n   */\n  const onFilterClick = async (e) => {\n    e.preventDefault();\n    updateField(\"logsPage\", 1);\n    fetchLogs(1);\n  };\n\n  /**\n   * When clicking on a pagination.\n   */\n  const onPaginationChange = (i) => {\n    const newPage = parseInt(i + 1);\n\n    if (newPage === fields.logsPage) {\n      return;\n    }\n\n    updateField(\"logsPage\", newPage);\n    fetchLogs(newPage, true);\n  };\n\n  const hasLogs = typeof fields.logs !== \"undefined\";\n\n  return (\n    <div className=\"section-logs\">\n      <Section>\n        <form onSubmit={onFilterClick}>\n          <Columns>\n            <Column width={2 / 5}>\n              <Select\n                label={i18n(\"Fields.Logs.FilterByStatus\")}\n                onChange={(e) => changeFilter(\"status\", e.target.value)}\n                options={[\n                  {\n                    value: \"all\",\n                    label: i18n(\"Fields.Logs.StatusAll\"),\n                  },\n                  {\n                    value: \"pending\",\n                    label: i18n(\"Fields.Logs.StatusPending\"),\n                  },\n                  {\n                    value: \"delivered\",\n                    label: i18n(\"Fields.Logs.StatusDelivered\"),\n                  },\n                  {\n                    value: \"failed\",\n                    label: i18n(\"Fields.Logs.StatusFailed\"),\n                  },\n                  {\n                    value: \"error\",\n                    label: i18n(\"Fields.Logs.StatusError\"),\n                  },\n                ]}\n              />\n            </Column>\n            <Column width={2 / 5}>\n              <TextField\n                id=\"filter_recipient\"\n                label={i18n(\"Fields.Logs.FilterByRecipient\")}\n                placeholder=\"someone@email.com\"\n                value={fields.logsFilters.recipient || \"\"}\n                onChange={(e) => changeFilter(\"recipient\", e.target.value)}\n              />\n            </Column>\n            <Column width={1 / 5} className=\"align-bottom\">\n              <Button\n                size=\"default\"\n                width=\"100%\"\n                variant=\"outline\"\n                color=\"blue\"\n                onClick={onFilterClick}\n                mutedOutline\n              >\n                {i18n(\"Button.Filter\")}\n              </Button>\n            </Column>\n          </Columns>\n        </form>\n      </Section>\n      <Section className=\"date-range-section\">\n        <nav className=\"date-range-selectors\">\n          <ul className=\"range-selector\">\n            <li\n              className={`${dateRange === \"last_hour\" ? \"active\" : \"\"}`}\n              onClick={() => changeDateRange(\"last_hour\")}\n            >\n              {i18n(\"Fields.Logs.LastHour\")}\n            </li>\n            <li\n              className={`${dateRange === \"last_24hours\" ? \"active\" : \"\"}`}\n              onClick={() => changeDateRange(\"last_24hours\")}\n            >\n              {i18n(\"Fields.Logs.Last24Hours\")}\n            </li>\n            <li\n              className={`${dateRange === \"last_7days\" ? \"active\" : \"\"}`}\n              onClick={() => changeDateRange(\"last_7days\")}\n            >\n              {i18n(\"Fields.Logs.Last7Days\")}\n            </li>\n            <li\n              className={`${dateRange === \"last_30days\" ? \"active\" : \"\"}`}\n              onClick={() => changeDateRange(\"last_30days\")}\n            >\n              {i18n(\"Fields.Logs.Last30Days\")}\n            </li>\n          </ul>\n\n          <Button\n            size=\"small\"\n            variant=\"text\"\n            color=\"blue\"\n            onClick={onFilterClick}\n            mutedOutline\n            className=\"refresh-button\"\n          >\n            <Refresh size=\"36\" fill=\"gray\" />\n          </Button>\n        </nav>\n      </Section>\n      {hasLogs && (\n        <>\n          <LogsTablenavigator\n            currentPage={fields.logsPage}\n            pagination={fields.logsPagination || {}}\n            onPaginationChange={onPaginationChange}\n          />\n          <LogsTable logs={fields.logs} resetExpand={resetExpand} />\n          <LogsTablenavigator\n            currentPage={fields.logsPage}\n            pagination={fields.logsPagination || {}}\n            onPaginationChange={onPaginationChange}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst LogsTable = ({ logs, resetExpand }) => {\n  const [expandedRow, setExpandedRow] = useState(null);\n\n  const expandRow = (index) => {\n    setExpandedRow(index);\n  };\n\n  useEffect(() => {\n    if (resetExpand) {\n      setExpandedRow(null);\n    }\n  }, [resetExpand]);\n\n  return (\n    <Panel mt=\"300\">\n      <Table className=\"logs-table\">\n        <thead>\n          <Table.Row header>\n            <Table.HeaderCell className=\"col-date\">\n              {i18n(\"Text.Date\")}\n            </Table.HeaderCell>\n            <Table.HeaderCell className=\"col-subject\">\n              {i18n(\"Text.Subject\")}\n            </Table.HeaderCell>\n            <Table.HeaderCell className=\"col-sender\">\n              {i18n(\"Text.Sender\")}\n            </Table.HeaderCell>\n            <Table.HeaderCell className=\"col-recipient\">\n              {i18n(\"Text.Recipient\")}\n            </Table.HeaderCell>\n            <Table.HeaderCell className=\"col-status\">\n              {i18n(\"Text.Status\")}\n            </Table.HeaderCell>\n            <Table.HeaderCell className=\"col-actions\"> </Table.HeaderCell>\n          </Table.Row>\n        </thead>\n        <tbody>\n          {logs.length === 0 && (\n            <Table.Row>\n              <Table.Cell colSpan=\"6\">\n                <p className=\"empty-table-message\">{i18n(\"Text.NoLogFound\")}</p>\n              </Table.Cell>\n            </Table.Row>\n          )}\n          {logs.map((log, l) => {\n            const isExpanded = l === expandedRow;\n\n            return (\n              <React.Fragment key={`logRow${l}`}>\n                <Table.Row>\n                  <Table.Cell className=\"col-date\">{log.date}</Table.Cell>\n                  <Table.Cell className=\"col-subject\">\n                    <span>{log.subject || \"\"}</span>\n                  </Table.Cell>\n                  <Table.Cell className=\"col-sender\">{log.sender}</Table.Cell>\n                  <Table.Cell className=\"col-recipient\">\n                    {log.recipient}\n                  </Table.Cell>\n                  <Table.Cell className=\"col-status\">\n                    <span className={`log-status status-${log.status}`}>\n                      <Tooltip\n                        content={`${log.details}`}\n                        id={`logRowDetails${l}`}\n                      >\n                        {log.status}\n                      </Tooltip>\n                    </span>\n                  </Table.Cell>\n                  <Table.Cell className=\"col-actions\">\n                    {isExpanded ? (\n                      <ExpandLess\n                        size=\"28\"\n                        fill=\"gray\"\n                        onClick={() => expandRow(null)}\n                      />\n                    ) : (\n                      <ExpandMore\n                        size=\"28\"\n                        fill=\"gray\"\n                        onClick={() => expandRow(l)}\n                      />\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n                {isExpanded && (\n                  <LogsTableActionsRow log={log} even={l % 2 === 0} />\n                )}\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Panel>\n  );\n};\n\nconst LogsTableActionsRow = ({ even, log }) => {\n  return (\n    <>\n      <Table.Row className={`col-actions-row ${even ? \"gray\" : \"white\"}`}>\n        <Table.Cell colSpan={6}>\n          <div className=\"log-row-data\">\n            <div className=\"subject\">\n              <h6>{i18n(\"Text.Subject\")}</h6>\n              <p>{log.subject}</p>\n            </div>\n            {!log.has_error && log.engagement && (\n              <>\n                <div className=\"engagement type-open\">\n                  <h6>{i18n(\"Text.EngagementOpened\")}</h6>\n                  {log.engagement.opened ? (\n                    <p>\n                      <span className=\"icon positive dashicons dashicons-yes-alt\"></span>\n                    </p>\n                  ) : (\n                    <p>\n                      <span className=\"icon negative dashicons dashicons-no\"></span>\n                    </p>\n                  )}\n                </div>\n                <div className=\"engagement type-clicked\">\n                  <h6>{i18n(\"Text.EngagementClicked\")}</h6>\n                  {log.engagement.clicked ? (\n                    <p>\n                      <span className=\"icon positive dashicons dashicons-yes-alt\"></span>\n                    </p>\n                  ) : (\n                    <p>\n                      <span className=\"icon negative dashicons dashicons-no\"></span>\n                    </p>\n                  )}\n                </div>\n              </>\n            )}\n            {log.has_error && (\n              <div className=\"error-info\">\n                <h6>{i18n(\"Text.ErrorMessage\")}</h6>\n                <p>{log.details}</p>\n              </div>\n            )}\n            {log.has_content && (\n              <nav>\n                <a href={log.preview_url} target=\"_blank\">\n                  {i18n(\"Text.ViewEmail\")}\n                </a>\n              </nav>\n            )}\n          </div>\n        </Table.Cell>\n      </Table.Row>\n      {/* The follow fake row is only here to avoid the background color changing (striped rows) */}\n      <Table.Row className=\"col-actions-fake-row\">\n        <Table.Cell colSpan={6}></Table.Cell>\n      </Table.Row>\n    </>\n  );\n};\n\nconst LogsTablenavigator = ({\n  currentPage,\n  pagination,\n  onPaginationChange,\n}) => {\n  if (pagination.total === 0) {\n    return null;\n  }\n\n  return (\n    <nav className=\"logs-table-navigator\">\n      {pagination.total && pagination.total > 0 && (\n        <p className=\"total\">\n          {pagination.total} {i18n(\"Text.XEmailsFound\")}\n        </p>\n      )}\n      {pagination.max_pages && pagination.max_pages > 0 && (\n        <Pagination\n          currentPage={currentPage}\n          pageRange={5}\n          pages={pagination.max_pages}\n          onChange={onPaginationChange}\n        />\n      )}\n    </nav>\n  );\n};\n\nexport default hot(Logs);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport AdminPage from \"./src/AdminPage\";\nimport { getEmailContent } from \"./src/utils/ajax\";\n\n/**\n * Render the WP Mail Pro admin page.\n */\nif (document.querySelector(\"#wpmp-admin-page-container\")) {\n  const renderAdminPage = () => {\n    render(<AdminPage />, document.querySelector(\"#wpmp-admin-page-container\"));\n  };\n\n  document.addEventListener(\"DOMContentLoaded\", renderAdminPage);\n}\n\n(function ($) {\n  const previewIframe = document.querySelector(\"#email-preview-iframe\");\n\n  if (!previewIframe) {\n    return;\n  }\n\n  /**\n   * Load the iframe content.\n   */\n  const loadIframeContent = async () => {\n    const result = await getEmailContent($(previewIframe).data(\"email-id\"));\n\n    if (result.success && result.content) {\n      const $body = $(previewIframe).contents().find(\"body\");\n      $body.html(result.content);\n    }\n  };\n\n  loadIframeContent();\n})(jQuery);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport {\n  Banner,\n  Button,\n  Column,\n  Columns,\n  LabelValue,\n  TextField,\n  useCopyToClipboard,\n} from \"@sparkpost/matchbox\";\nimport { Add, Help } from \"@sparkpost/matchbox-icons\";\nimport Section from \"../components/Section\";\nimport { i18n } from \"../utils/utils\";\nimport { createDomain, verifyRecords } from \"../utils/ajax\";\nimport { useAppState } from \"../utils/context\";\n\nconst DNS = () => {\n  const { fields, updateField, setLoading, displayNotice } = useAppState();\n  const { copy } = useCopyToClipboard();\n\n  if (!fields.license_activated) {\n    return (\n      <Section>\n        <Banner size=\"small\" status=\"warning\" onDismiss={() => {}}>\n          {i18n(\"Text.NoDNSReason\")}\n        </Banner>\n      </Section>\n    );\n  }\n\n  const onCreateClick = async (e) => {\n    setLoading(true);\n    const result = await createDomain(fields.sending_domain);\n\n    if (result.message) {\n      const status = result.error\n        ? \"error\"\n        : result.success\n        ? \"success\"\n        : \"warning\";\n\n      displayNotice(result.message, status);\n    }\n\n    if (result.fields) {\n      if (result.fields.sending_domain) {\n        updateField(\"sending_domain\", result.fields.sending_domain);\n      }\n\n      if (result.fields.current_sending_domain) {\n        updateField(\n          \"current_sending_domain\",\n          result.fields.current_sending_domain\n        );\n      }\n\n      if (\n        result.fields.sending_domain_record_hostname &&\n        result.fields.sending_domain_record_value\n      ) {\n        updateField(\n          \"sending_domain_record_hostname\",\n          result.fields.sending_domain_record_hostname\n        );\n\n        updateField(\n          \"sending_domain_record_value\",\n          result.fields.sending_domain_record_value\n        );\n\n        updateField(\"domain_dkim_record_is_valid\", null);\n        updateField(\"domain_dkim_record_verified\", null);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  const onVerifyClick = async (e) => {\n    setLoading(true);\n    const result = await verifyRecords(fields.sending_domain);\n\n    if (result.message) {\n      const status = result.error\n        ? \"error\"\n        : !!result.fields.domain_dkim_record_is_valid\n        ? \"success\"\n        : \"warning\";\n      displayNotice(result.message, status);\n    }\n\n    if (result.fields) {\n      if (typeof result.fields.domain_dkim_record_is_valid !== \"undefined\") {\n        updateField(\n          \"domain_dkim_record_is_valid\",\n          result.fields.domain_dkim_record_is_valid\n        );\n      }\n\n      if (typeof result.fields.domain_dkim_record_verified !== \"undefined\") {\n        updateField(\n          \"domain_dkim_record_verified\",\n          result.fields.domain_dkim_record_verified\n        );\n      }\n\n      if (typeof result.fields.sender_mail !== \"undefined\") {\n        updateField(\"sender_mail\", result.fields.sender_mail);\n        updateField(\"sender_mail_prefix\", result.fields.sender_mail_prefix);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  const onCopyClick = (text) => {\n    copy(text);\n    displayNotice(i18n(\"Text.TextCopied\"), \"success\");\n  };\n\n  const hasDomainRecord =\n    !!fields.sending_domain_record_hostname &&\n    !!fields.sending_domain_record_value;\n\n  const verificationExists = parseInt(fields.domain_dkim_record_verified) > 0;\n\n  let sendingDomain = fields.sending_domain || \"\";\n\n  if (sendingDomain === fields.default_sending_domain) {\n    sendingDomain = \"\";\n  }\n\n  return (\n    <>\n      <Section\n        title={i18n(\"Panels.DNS.SendingDomainField\")}\n        className=\"section-create-domain\"\n      >\n        <div className=\"restricted-width\">\n          <TextField\n            id=\"sending_domain\"\n            label={i18n(\"Fields.DNS.SendingDomain\")}\n            placeholder=\"your-domain.com\"\n            name=\"sending_domain\"\n            value={sendingDomain}\n            onChange={(e) => {\n              updateField(e.target.name, e.target.value);\n            }}\n            connectRight={\n              <Button\n                size=\"default\"\n                variant=\"outline\"\n                color=\"blue\"\n                onClick={onCreateClick}\n                disabled={\n                  fields.sending_domain === fields.current_sending_domain\n                }\n              >\n                <Button.Icon as={Add} size={20} mr=\"200\"></Button.Icon>\n                {i18n(\"Button.CreateDomain\")}\n              </Button>\n            }\n          />\n        </div>\n      </Section>\n      {hasDomainRecord && (\n        <>\n          <Section\n            title={i18n(\"Panels.DNS.SendingDomainRecords\")}\n            className=\"section-domain-records\"\n          >\n            <Columns>\n              <Column className=\"dkim-record-hostname\" width={1 / 3}>\n                <LabelValue orientation=\"vertical\">\n                  <LabelValue.Label>\n                    {i18n(\"Text.Hostname\")}{\" \"}\n                    <span\n                      className=\"copy-link\"\n                      onClick={() => {\n                        onCopyClick(fields.sending_domain_record_hostname);\n                      }}\n                    >\n                      {i18n(\"Text.Copy\")}\n                    </span>\n                  </LabelValue.Label>\n                  <LabelValue.Value>\n                    <code className=\"dkim-record-hostname\">\n                      {fields.sending_domain_record_hostname}\n                    </code>\n                  </LabelValue.Value>\n                </LabelValue>\n              </Column>\n              <Column className=\"dkim-record-value\">\n                <LabelValue orientation=\"vertical\">\n                  <LabelValue.Label>\n                    {i18n(\"Text.Value\")}{\" \"}\n                    <span\n                      className=\"copy-link\"\n                      onClick={() => {\n                        onCopyClick(fields.sending_domain_record_value);\n                      }}\n                    >\n                      {i18n(\"Text.Copy\")}\n                    </span>\n                  </LabelValue.Label>\n                  <LabelValue.Value>\n                    <code className=\"dkim-record-value\">\n                      {fields.sending_domain_record_value}\n                    </code>\n                  </LabelValue.Value>\n                </LabelValue>\n              </Column>\n            </Columns>\n          </Section>\n          <Section\n            title={i18n(\"Panels.DNS.SendingDomainVerify\")}\n            className=\"section-verify-domain\"\n          >\n            {verificationExists && !fields.domain_dkim_record_is_valid && (\n              <Banner\n                mb=\"300\"\n                size=\"small\"\n                status=\"warning\"\n                onDismiss={() => {}}\n              >\n                {i18n(\"Fields.Verify.PropagationWarning\")}\n              </Banner>\n            )}\n            <Columns>\n              <Column width=\"content\">\n                <Button\n                  variant=\"outline\"\n                  color=\"blue\"\n                  disabled={!hasDomainRecord}\n                  onClick={onVerifyClick}\n                >\n                  {i18n(\"Button.Verify\")} {fields.sending_domain}\n                </Button>\n              </Column>\n              <Column className=\"vertical-align\">\n                {verificationExists && (\n                  <>\n                    {fields.domain_dkim_record_is_valid ? (\n                      <p className=\"last-verification-status valid\">\n                        <span className=\"icon dashicons dashicons-yes-alt\"></span>\n                        <span className=\"text\">\n                          {i18n(\"Text.DkimValid\")}{\" \"}\n                          <small>({fields.domain_dkim_record_verified})</small>\n                        </span>\n                      </p>\n                    ) : (\n                      <p className=\"last-verification-status invalid\">\n                        <span className=\"icon dashicons dashicons-no\"></span>\n                        <span className=\"text\">\n                          {i18n(\"Text.DkimInvalid\")}{\" \"}\n                          <small>({fields.domain_dkim_record_verified})</small>\n                        </span>\n                      </p>\n                    )}\n                  </>\n                )}\n              </Column>\n            </Columns>\n          </Section>\n          <p className=\"help-link\">\n            <a\n              href=\"https://docs.wpmailpro.com/docs/configure-sending-domain/\"\n              target=\"_blank\"\n            >\n              <Help size={18} /> {i18n(\"Text.NeedHelp\")}\n            </a>\n          </p>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default hot(DNS);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport {\n  Button,\n  TextField,\n  Columns,\n  Column,\n  Banner,\n  Checkbox,\n  Select,\n} from \"@sparkpost/matchbox\";\nimport { Email, Help, VpnKey } from \"@sparkpost/matchbox-icons\";\nimport Section from \"../components/Section\";\nimport { i18n } from \"../utils/utils\";\nimport {\n  activateLicense,\n  deactivateLicense,\n  saveFields,\n  sendTestEmail,\n} from \"../utils/ajax\";\nimport { useAppState } from \"../utils/context\";\n\nconst Settings = () => {\n  const { fields, updateField, setLoading, displayNotice } = useAppState();\n\n  /**\n   * When activating the license.\n   */\n  const onActivateLicenseClick = async (e) => {\n    setLoading(true);\n    const result = await activateLicense(fields.license);\n\n    if (result.success === true) {\n      updateField(\"license_activated\", true);\n      displayNotice(result.message, \"success\");\n    } else {\n      updateField(\"license_activated\", false);\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When deactivating the license\n   */\n  const onDeactivateLicenseClick = async (e) => {\n    setLoading(true);\n    const result = await deactivateLicense(fields.license);\n\n    if (result.success === true) {\n      updateField(\"license_activated\", false);\n      displayNotice(result.message, \"success\");\n    } else {\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When saving the e-mail adress/name.\n   */\n  const onEmailSaveClick = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const result = await saveFields({\n      sender_mail_prefix: fields.sender_mail_prefix,\n      sender_mail_suffix: fields.sender_mail_suffix,\n      sender_name: fields.sender_name,\n    });\n\n    if (result.success === true) {\n      displayNotice(result.message, \"success\");\n    } else {\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When saving the reply-to e-mail adress/name.\n   */\n  const onReplyToSaveClick = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const result = await saveFields({\n      reply_to_mail: fields.reply_to_mail,\n      reply_to_name: fields.reply_to_name,\n    });\n\n    if (result.success === true) {\n      displayNotice(result.message, \"success\");\n    } else {\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When changing the \"Force sender e-mail\" setting.\n   */\n  const onForceSenderEmailChange = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    updateField(\"force_sender_email\", e.target.checked);\n\n    const result = await saveFields({\n      force_sender_email: e.target.checked,\n    });\n\n    if (result.success === true) {\n      displayNotice(result.message, \"success\");\n    } else {\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When changing the \"Reply-to\" enable/disable setting.\n   */\n  const onReplyToToggleChange = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    updateField(\"reply_to_enabled\", e.target.checked);\n\n    const result = await saveFields({\n      reply_to_enabled: e.target.checked,\n    });\n\n    if (result.success === true) {\n      displayNotice(result.message, \"success\");\n    } else {\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  /**\n   * When sending the test email.\n   */\n  const onTestEmailClick = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const result = await sendTestEmail(fields.test_email_recipient);\n\n    if (result.success === true) {\n      displayNotice(result.message, \"success\");\n    } else {\n      displayNotice(result.message || result.error, \"error\");\n    }\n\n    setLoading(false);\n  };\n\n  const showAllSettingsBoxes = !!fields.license_activated;\n\n  return (\n    <>\n      {showAllSettingsBoxes && (\n        <>\n          <Section\n            title={i18n(\"Panels.Settings.EmailSender\")}\n            className=\"email-sender-settings\"\n          >\n            {fields.sending_domain === fields.default_sending_domain && (\n              <Banner\n                mb=\"500\"\n                size=\"small\"\n                status=\"warning\"\n                onDismiss={() => {}}\n              >\n                {i18n(\"Fields.Settings.WarningDefaultDomain1\")}{\" \"}\n                <a\n                  href=\"https://docs.wpmailpro.com/docs/configure-sending-domain/\"\n                  target=\"_blank\"\n                >\n                  {i18n(\"Fields.Settings.WarningDefaultDomain2\")}\n                </a>\n              </Banner>\n            )}\n            <Columns>\n              <Column width={2 / 5}>\n                <TextField\n                  id=\"sender_mail\"\n                  label={i18n(\"Fields.Settings.EmailSenderMail\")}\n                  placeholder=\"john.doe\"\n                  name=\"sender_mail_prefix\"\n                  value={fields.sender_mail_prefix}\n                  disabled={!fields.domain_dkim_record_is_valid}\n                  onChange={(e) => {\n                    updateField(e.target.name, e.target.value);\n                  }}\n                  connectRight={\n                    <EmailDomainSelectorDropdown\n                      fields={fields}\n                      updateField={updateField}\n                    />\n                  }\n                />\n              </Column>\n              <Column width={2 / 5}>\n                <TextField\n                  id=\"sender_name\"\n                  label={i18n(\"Fields.Settings.EmailSenderName\")}\n                  placeholder=\"John Doe\"\n                  name=\"sender_name\"\n                  value={fields.sender_name}\n                  onChange={(e) => {\n                    updateField(e.target.name, e.target.value);\n                  }}\n                />\n              </Column>\n              <Column className=\"align-bottom\">\n                <Button\n                  size=\"default\"\n                  width=\"100%\"\n                  variant=\"outline\"\n                  color=\"blue\"\n                  onClick={onEmailSaveClick}\n                  mutedOutline\n                >\n                  {i18n(\"Button.Save\")}\n                </Button>\n              </Column>\n            </Columns>\n            {/* {fields.sender_mail !== \"\" &&\n              fields.domain_dkim_record_is_valid &&\n              !fields.sender_mail.includes(fields.sending_domain) && (\n                <Banner\n                  mt=\"300\"\n                  size=\"small\"\n                  status=\"warning\"\n                  onDismiss={() => {}}\n                >\n                  {i18n(\"Fields.Settings.EmailSenderMailDesc\")}\n                </Banner>\n              )} */}\n            <div className=\"force-sender-setting\">\n              <Checkbox\n                id=\"force_sender_email\"\n                name=\"force_sender_email\"\n                checked={fields.force_sender_email}\n                label={i18n(\"Fields.Settings.ForceSenderEmail\")}\n                helpText={i18n(\"Fields.Settings.ForceSenderEmailDesc\")}\n                onChange={onForceSenderEmailChange}\n              />\n            </div>\n          </Section>\n          <Section\n            title={i18n(\"Fields.Settings.ReplyToEnabled\")}\n            className=\"reply-to-section\"\n          >\n            <Checkbox\n              id=\"reply_to_enabled\"\n              name=\"reply_to_enabled\"\n              checked={fields.reply_to_enabled}\n              label={i18n(\"Fields.Settings.ReplyToEnabledLabel\")}\n              onChange={onReplyToToggleChange}\n            />\n            {fields.reply_to_enabled && (\n              <Columns mt={300}>\n                <Column width={2 / 5}>\n                  <TextField\n                    id=\"reply_to_mail\"\n                    label={i18n(\"Fields.Settings.EmailSenderMail\")}\n                    placeholder=\"john.doe@mail.com\"\n                    name=\"reply_to_mail\"\n                    type=\"email\"\n                    value={fields.reply_to_mail}\n                    onChange={(e) => {\n                      updateField(e.target.name, e.target.value);\n                    }}\n                  />\n                </Column>\n                <Column width={2 / 5}>\n                  <TextField\n                    id=\"reply_to_name\"\n                    label={i18n(\"Fields.Settings.EmailSenderName\")}\n                    placeholder=\"John Doe\"\n                    name=\"reply_to_name\"\n                    value={fields.reply_to_name}\n                    onChange={(e) => {\n                      updateField(e.target.name, e.target.value);\n                    }}\n                  />\n                </Column>\n                <Column className=\"align-bottom\">\n                  <Button\n                    size=\"default\"\n                    width=\"100%\"\n                    variant=\"outline\"\n                    color=\"blue\"\n                    onClick={onReplyToSaveClick}\n                    mutedOutline\n                  >\n                    {i18n(\"Button.Save\")}\n                  </Button>\n                </Column>\n              </Columns>\n            )}\n          </Section>\n          <Section title={i18n(\"Panels.DNS.TestEmail\")}>\n            <form className=\"restricted-width\" onSubmit={onTestEmailClick}>\n              <TextField\n                id=\"test_email_recipient\"\n                label={i18n(\"Fields.DNS.TestEmailRecipient\")}\n                placeholder=\"some@email.com\"\n                name=\"test_email_recipient\"\n                value={fields.test_email_recipient || \"\"}\n                onChange={(e) => {\n                  updateField(e.target.name, e.target.value);\n                }}\n                connectRight={\n                  <Button\n                    size=\"default\"\n                    variant=\"outline\"\n                    color=\"blue\"\n                    disabled={!fields.test_email_recipient}\n                    onClick={onTestEmailClick}\n                  >\n                    <Button.Icon as={Email} size={20} mr=\"200\"></Button.Icon>\n                    {i18n(\"Button.Send\")}\n                  </Button>\n                }\n              />\n            </form>\n          </Section>\n        </>\n      )}\n      <Section title={i18n(\"Panels.Settings.License\")}>\n        <div className=\"restricted-width xl\">\n          <TextField\n            id=\"license\"\n            label={i18n(\"Fields.Settings.PluginLicense\")}\n            placeholder={i18n(\"Fields.Settings.PluginLicense\")}\n            name=\"license\"\n            value={fields.license}\n            //readOnly={fields.license_activated}\n            onChange={(e) => {\n              updateField(e.target.name, e.target.value);\n            }}\n            connectRight={\n              <>\n                <Button\n                  size=\"default\"\n                  onClick={onActivateLicenseClick}\n                  mutedOutline\n                  color=\"blue\"\n                  //disabled={fields.license_activated || fields.license === \"\"}\n                >\n                  {i18n(\"Button.LicenseActivate\")}\n                </Button>\n                <Button\n                  size=\"default\"\n                  onClick={onDeactivateLicenseClick}\n                  color=\"red\"\n                  //disabled={!fields.license_activated || fields.license === \"\"}\n                >\n                  {i18n(\"Button.LicenseDeactivate\")}\n                </Button>\n              </>\n            }\n          />\n        </div>\n        {!fields.license_activated && (\n          <p className=\"free-license-callout\">\n            <a\n              href=\"https://wpmailpro.com/pricing?upgrade=true\"\n              target=\"_blank\"\n            >\n              <VpnKey size={22} /> {i18n(\"Text.NeedFreeLicense\")}\n            </a>\n          </p>\n        )}\n      </Section>\n      <p className=\"help-link\">\n        <a href=\"https://docs.wpmailpro.com/docs/settings/\" target=\"_blank\">\n          <Help size={18} /> {i18n(\"Text.NeedHelp\")}\n        </a>\n      </p>\n    </>\n  );\n};\n\n/**\n * E-mail domain selector dropdown (custom domain OR default domain).\n */\nexport const EmailDomainSelectorDropdown = ({ fields, updateField }) => {\n  // If no custom domain, return default domain disabled text field.\n  if (!fields.domain_dkim_record_is_valid) {\n    return (\n      <TextField\n        id=\"sender_mail_suffix\"\n        value={`@${fields.default_sending_domain}`}\n        disabled\n      />\n    );\n  }\n\n  // Otherwise, return a dropdown.\n  return (\n    <Select\n      className=\"sender-mail-suffix\"\n      name=\"sender_mail_suffix\"\n      value={fields.sender_mail_suffix}\n      onChange={(e) => updateField(\"sender_mail_suffix\", e.target.value)}\n      options={[\n        {\n          value: fields.sending_domain,\n          label: `@${fields.sending_domain}`,\n        },\n        {\n          value: fields.default_sending_domain,\n          label: `@${fields.default_sending_domain}`,\n        },\n      ]}\n    />\n  );\n};\n\nexport default hot(Settings);\n","import { hot } from \"react-hot-loader/root\";\nimport React, { useEffect } from \"react\";\nimport { Tabs as MatchboxTabs, useTabs } from \"@sparkpost/matchbox\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport { i18n } from \"../utils/utils\";\nimport { Metrics, Logs, DNS, Settings } from \"../tabs\";\nimport { useAppState } from \"../utils/context\";\n\nconst tabsList = [\n  { title: i18n(\"Tabs.Metrics\"), component: Metrics, slug: \"metrics\" },\n  { title: i18n(\"Tabs.Logs\"), component: Logs, slug: \"logs\" },\n  { title: i18n(\"Tabs.DNS\"), component: DNS, slug: \"dns\" },\n  { title: i18n(\"Tabs.Settings\"), component: Settings, slug: \"settings\" },\n];\n\nconst initialTabIndex =\n  tabsList.findIndex((tab) => tab.slug === window.WPMailPro.data.current_tab) ||\n  0;\n\nconst updateAdminMenuOnTabSelection = (index) => {\n  const currentMenuLink = document.querySelector(\n    \"ul#adminmenu li#toplevel_page_wpmailpro ul.wp-submenu li.current\"\n  );\n  const menuLink = document.querySelector(\n    `ul#adminmenu li#toplevel_page_wpmailpro ul.wp-submenu li a[href$=${tabsList[index].slug}]`\n  );\n  const menuLinkLi = menuLink.parentNode;\n\n  if (currentMenuLink) {\n    currentMenuLink.classList.remove(\"current\");\n  }\n\n  if (menuLinkLi) {\n    menuLinkLi.classList.add(\"current\");\n  }\n};\n\nconst Tabs = () => {\n  const { hideNotice } = useAppState();\n\n  const { tabIndex, setTabIndex, tabs } = useTabs({\n    tabs: tabsList.map((tab) => ({\n      content: tab.title,\n    })),\n  });\n\n  useEffect(() => {\n    setTabIndex(initialTabIndex);\n    updateAdminMenuOnTabSelection(initialTabIndex);\n  }, []);\n\n  const onTabSelect = (tabIndex) => {\n    updateAdminMenuOnTabSelection(tabIndex);\n\n    setTabIndex(tabIndex);\n    hideNotice();\n  };\n\n  return (\n    <>\n      <nav className=\"plugin-tabs\">\n        <MatchboxTabs\n          selected={tabIndex}\n          tabs={tabs}\n          onSelect={onTabSelect}\n          fitted\n        />\n      </nav>\n\n      {tabsList.map((tab, i) => {\n        if (i !== tabIndex) {\n          return null;\n        }\n\n        const TabContent = tab.component;\n\n        return (\n          <div className=\"tab-content\" key={`tabContent${i}`}>\n            <TabContent />\n            <LoadingIndicator />\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default hot(Tabs);\n","import { hot } from \"react-hot-loader/root\";\nimport React from \"react\";\nimport { ThemeProvider } from \"@sparkpost/matchbox\";\n\nimport { ContextContainer } from \"./utils/context\";\nimport Header from \"./components/Header\";\nimport Tabs from \"./components/Tabs\";\n\nconst AdminPage = () => {\n  return (\n    <ThemeProvider>\n      <ContextContainer>\n        <div className=\"wrap\">\n          <Header />\n          <div className=\"admin-page-core-content\">\n            <Tabs />\n          </div>\n        </div>\n      </ContextContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default hot(AdminPage);\n"],"sourceRoot":""}